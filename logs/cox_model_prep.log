
. 
. * Prepare datasets
. foreach period in pre pandemic wave1 easing1 wave2 easing2 wave3 easing3 {
  2.     import delimited using ./output/survival/input_survival_`period'.csv, 
> clear stringcols(2/24)
  3.     describe
  4.     * First preparing dataset
.     * Drop variables that are not required
.     drop copd_exacerbation_hospital copd_hospital eth ethnicity_sus
  5. 
.     * Assume deregistered on 1st of month
.     gen dereg_dateA = date(dereg_date, "YMD")
  6.     format %dD/N/CY dereg_dateA
  7.     drop dereg_date
  8. 
.     * Format dates
.     local a "mi_primary_admission stroke_primary_admission heart_failure_prim
> ary_admission vte_primary_admission t1dm_admission_primary t2dm_admission_pri
> mary dm_keto_admission_primary asthma_exacerbation depression_primary_admissi
> on anxiety_primary_admission smi_primary_admission cvd_admission_date dm_admi
> ssion copd_hospitalisation_date mh_admission died_fu lrti_hospital copd_any" 
  9.     local b "mi_admit_date stroke_admit_date hf_admit_date vte_admit_date 
> t1dm_admit_date t2dm_admit_date dm_keto_admit_date asthma_admit_date depress_
> admit_date anx_admit_date smi_admit_date cvd_admit_date dm_admit_date copd_ad
> mit_date mh_admit_date date_died lrti_admit_date copd_any_date" 
 10.     forvalues i=1/18 {
 11.         local c: word `i' of `a'
 12.         local d: word `i' of `b' 
 13.         di "number of missing values"
 14.         count if `c'==""  
 15.         gen `d'=date(`c', "YMD")
 16.         format %dD/N/CY `d'
 17.         drop `c'
 18.         }
 19.     
.     * Update COPD exacerbation date if hospitalised with LRTI primary and COP
> D any position
.     gen lrti_copd = lrti_admit_date==copd_any_date & copd_any_date!=.
 20.     tab lrti_copd
 21.     replace copd_admit_date = lrti_admit_date if lrti_copd==1 & lrti_admit
> _date<copd_admit_date
 22. 
.     if "`period'"=="pre" {
 23.         * Define index date
.         gen index_date = date("01/03/2018", "DMY")
 24.         * Define end of follow-up
.         gen end_study = date("22/03/2020", "DMY")
 25.     }
 26.         else if "`period'"=="pandemic" {
 27.             * Define index date
.             gen index_date = date("23/03/2020", "DMY")
 28.             * Define end of follow-up
.             gen end_study = date("30/04/2022", "DMY")
 29.         }
 30.            else if "`period'"=="wave1" {
 31.             * Define index date
.             gen index_date = date("23/03/2020", "DMY")
 32.             * Define end of follow-up
.             gen end_study = date("30/05/2020", "DMY")
 33.             } 
 34.                 else if "`period'"=="easing1" {
 35.                     * Define index date
.                     gen index_date = date("31/05/2020", "DMY")
 36.                     * Define end of follow-up
.                     gen end_study = date("06/09/2020", "DMY")
 37.                     } 
 38.                     else if "`period'"=="wave2" {
 39.                         * Define index date
.                         gen index_date = date("07/09/2020", "DMY")
 40.                         * Define end of follow-up
.                         gen end_study = date("24/04/2021", "DMY")
 41.                         } 
 42.                         else if "`period'"=="easing2" {
 43.                             * Define index date
.                             gen index_date = date("25/04/2021", "DMY")
 44.                             * Define end of follow-up
.                             gen end_study = date("27/05/2021", "DMY")
 45.                             } 
 46.                             else if "`period'"=="wave3" {
 47.                                 * Define index date
.                                 gen index_date = date("28/05/2021", "DMY")
 48.                                 * Define end of follow-up
.                                 gen end_study = date("14/12/2021", "DMY")
 49.                                 } 
 50.                                 else if "`period'"=="easing3" {
 51.                                     * Define index date
.                                     gen index_date = date("15/12/2021", "DMY"
> )
 52.                                     * Define end of follow-up
.                                     gen end_study = date("30/04/2022", "DMY")
 53.                                     } 
 54.         format %dD/N/CY index_date end_study
 55.        list index_date in 1/5 
 56.        list end_study in 1/5
 57.         egen end_date = rowmin(dereg_dateA end_study date_died)
 58.         format %dD/N/CY end_date
 59.         di "Number where end date is prior to index"
 60.         count if end_date<index_date
 61. 
.     * Reorder ethnicity - white, asian, black, mixed, other
.     *re-order ethnicity
.     gen eth5=1 if ethnicity==1
 62.     replace eth5=2 if ethnicity==3
 63.     replace eth5=3 if ethnicity==4
 64.     replace eth5=4 if ethnicity==2
 65.     replace eth5=5 if ethnicity==5
 66.     replace eth5=. if ethnicity==.
 67. 
.     label define eth5                   1 "White"                            
>            ///
>                                 2 "South Asian"                         ///  
>                                            
>                                 3 "Black"                                    
>    ///
>                                 4 "Mixed"                                    
>    ///
>                                 5 "Other"                                    
>    
 68.                         
. 
.     label values eth5 eth5
 69.     safetab eth5, m
 70. 
.     * Make gender numeric
.     gen male = 1 if sex == "M"
 71.     replace male = 0 if sex == "F"
 72.     label define male 0"Female" 1"Male"
 73.     label values male male
 74.     safetab male, miss
 75.     drop sex
 76. 
.     * Make region numeric
.     generate region2=.
 77.     replace region2=0 if region=="East"
 78.     replace region2=1 if region=="East Midlands"
 79.     replace region2=2 if region=="London"
 80.     replace region2=3 if region=="North East"
 81.     replace region2=4 if region=="North West"
 82.     replace region2=5 if region=="South East"
 83.     replace region2=6 if region=="South West"
 84.     replace region2=7 if region=="West Midlands"
 85.     replace region2=8 if region=="Yorkshire and The Humber"
 86.     drop region
 87.     rename region2 region
 88.     label var region "region of England"
 89.     label define region 0 "East" 1 "East Midlands"  2 "London" 3 "North Ea
> st" 4 "North West" 5 "South East" 6 "South West" 7 "West Midlands" 8 "Yorkshi
> re and The Humber"
 90.     label values region region
 91.     safetab region, miss
 92. 
.     *create a 4 category rural urban variable 
.     generate urban_rural_5=.
 93.     la var urban_rural_5 "Rural Urban in five categories"
 94.     replace urban_rural_5=1 if urban_rural==1
 95.     replace urban_rural_5=2 if urban_rural==2
 96.     replace urban_rural_5=3 if urban_rural==3|urban_rural==4
 97.     replace urban_rural_5=4 if urban_rural==5|urban_rural==6
 98.     replace urban_rural_5=5 if urban_rural==7|urban_rural==8
 99.     label define urban_rural_5 1 "Urban major conurbation" 2 "Urban minor 
> conurbation" 3 "Urban city and town" 4 "Rural town and fringe" 5 "Rural villa
> ge and dispersed"
100.     label values urban_rural_5 urban_rural_5
101.     safetab urban_rural_5, miss
102. 
.     *generate a binary rural urban (with missing assigned to urban)
.     generate urban_rural_bin=.
103.     replace urban_rural_bin=1 if urban_rural<=4|urban_rural==.
104.     replace urban_rural_bin=0 if urban_rural>4 & urban_rural!=.
105.     label define urban_rural_bin 0 "Rural" 1 "Urban"
106.     label values urban_rural_bin urban_rural_bin
107.     safetab urban_rural_bin urban_rural, miss
108.     label var urban_rural_bin "Rural-Urban"
109. 
.     * Define age categories
.     * Create age categories
.     egen age_cat = cut(age), at(18, 40, 60, 80, 120) icodes
110.     label define age 0 "18 - 40 years" 1 "41 - 60 years" 2 "61 - 80 years"
>  3 ">80 years"
111.     label values age_cat age
112.     safetab age_cat, miss
113. 
.     save "./output/prep_survival_`period'", replace
114. }
(42 vars, 1,000 obs)

Contains data
  obs:         1,000                          
 vars:            42                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dereg_date      str10   %10s                  
died_fu         str10   %10s                  
mi_primary_ad~n str10   %10s                  
stroke_primar~n str10   %10s                  
heart_failure~n str10   %10s                  
vte_primary_a~n str10   %10s                  
t1dm_admissio~y str10   %10s                  
t2dm_admissio~y str10   %10s                  
dm_keto_admis~y str10   %10s                  
copd_exacerba~l str10   %10s                  
copd_hospital   str10   %10s                  
lrti_hospital   str10   %10s                  
copd_any        str10   %10s                  
asthma_exacer~n str10   %10s                  
depression_pr~n str10   %10s                  
anxiety_prima~n str10   %10s                  
smi_primary_a~n str10   %10s                  
self_harm_pri~n str10   %10s                  
stp             str4    %9s                   
age             str2    %9s                   
sex             str1    %9s                   
eth             str1    %9s                   
ethnicity_sus   str1    %9s                   
ethnicity       str1    %9s                   
has_msoa        byte    %8.0g                 
imd             byte    %8.0g                 
region          str24   %24s                  
shielded        byte    %8.0g                 
has_t1_diabetes byte    %8.0g                 
has_t2_diabetes byte    %8.0g                 
diabetes_subg~p byte    %8.0g                 
cvd_subgroup    byte    %8.0g                 
has_asthma      byte    %8.0g                 
has_copd        byte    %8.0g                 
resp_subgroup   byte    %8.0g                 
mh_subgroup     byte    %8.0g                 
urban_rural     byte    %8.0g                 
cvd_admission~e str10   %10s                  
dm_admission    str10   %10s                  
copd_hospital~e str10   %10s                  
mh_admission    str10   %10s                  
patient_id      int     %8.0g                 
-------------------------------------------------------------------------------
Sorted by: 
     Note: Dataset has changed since last saved.
(950 missing values generated)
number of missing values
  976
(976 missing values generated)
number of missing values
  980
(980 missing values generated)
number of missing values
  977
(977 missing values generated)
number of missing values
  977
(977 missing values generated)
number of missing values
  982
(982 missing values generated)
number of missing values
  978
(978 missing values generated)
number of missing values
  981
(981 missing values generated)
number of missing values
  986
(986 missing values generated)
number of missing values
  984
(984 missing values generated)
number of missing values
  979
(979 missing values generated)
number of missing values
  980
(980 missing values generated)
number of missing values
  914
(914 missing values generated)
number of missing values
  942
(942 missing values generated)
number of missing values
  958
(958 missing values generated)
number of missing values
  923
(923 missing values generated)
number of missing values
  950
(950 missing values generated)
number of missing values
  978
(978 missing values generated)
number of missing values
  985
(985 missing values generated)

  lrti_copd |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,000      100.00      100.00
------------+-----------------------------------
      Total |      1,000      100.00
(0 real changes made)

     +------------+
     | index_date |
     |------------|
  1. | 01/03/2018 |
  2. | 01/03/2018 |
  3. | 01/03/2018 |
  4. | 01/03/2018 |
  5. | 01/03/2018 |
     +------------+

     +------------+
     |  end_study |
     |------------|
  1. | 22/03/2020 |
  2. | 22/03/2020 |
  3. | 22/03/2020 |
  4. | 22/03/2020 |
  5. | 22/03/2020 |
     +------------+
Number where end date is prior to index
  0
type mismatch
r(109);

end of do-file
r(109);

end of do-file

r(109);


