
. cap mkdir ./output/collapsed

. cap mkdir ./output/graphs

. 
. * Generates graphs for clinical monitoring measures
. foreach v in hba1c systolic_bp bp_meas {
  2.     * Ethnicity
.     clear 
  3.     import delimited using ./output/measures/dm/measure_dm_`v'_ethnicity_r
> ate.csv, numericcols(4)
  4.     * Generate rate per 100,000
.     gen rate = value*100000 
  5.     * Format date
.     gen dateA = date(date, "YMD")
  6.     drop date
  7.     format dateA %dD/M/Y
  8.     tab dateA 
  9.     * reshape dataset so columns with rates for each ethnicity 
.     reshape wide value rate population `v', i(dateA) j(ethnicity)
 10.     describe
 11.     * Labelling ethnicity variables
.     label var rate1 "White"
 12.     label var rate2 "Mixed"
 13.     label var rate3 "Asian"
 14.     label var rate4 "Black"
 15.     label var rate5 "Other"
 16. 
.     * Generate line graph
.     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) ytick(0(50000)800000) xmtick(##6) legend(
> row(1) size(small) title("Ethnic categories", size(small)))
 17.  
. 
.     graph export ./output/graphs/line_dm_ethnic_`v'.svg, as(svg) replace
 18.     /* IMD
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_`v'_imd_rate.csv, 
> numericcols(4)
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA 
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate population `v', i(dateA) j(imd)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "IMD - 1"
>     label var rate2 "IMD - 2"
>     label var rate3 "IMD - 3"
>     label var rate4 "IMD - 4"
>     label var rate5 "IMD - 5"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("IMD categories", size(small)))
> 
> 
>     graph export ./output/graphs/line_dm_imd_`v'.svg, as(svg) replace
> */
. }
(5 vars, 235 obs)

      dateA |      Freq.     Percent        Cum.
------------+-----------------------------------
  01mar2018 |          5        2.13        2.13
  01apr2018 |          5        2.13        4.26
  01may2018 |          5        2.13        6.38
  01jun2018 |          5        2.13        8.51
  01jul2018 |          5        2.13       10.64
  01aug2018 |          5        2.13       12.77
  01sep2018 |          5        2.13       14.89
  01oct2018 |          5        2.13       17.02
  01nov2018 |          5        2.13       19.15
  01dec2018 |          5        2.13       21.28
  01jan2019 |          5        2.13       23.40
  01feb2019 |          5        2.13       25.53
  01mar2019 |          5        2.13       27.66
  01apr2019 |          5        2.13       29.79
  01may2019 |          5        2.13       31.91
  01jun2019 |          5        2.13       34.04
  01jul2019 |          5        2.13       36.17
  01aug2019 |          5        2.13       38.30
  01sep2019 |          5        2.13       40.43
  01oct2019 |          5        2.13       42.55
  01nov2019 |          5        2.13       44.68
  01dec2019 |          5        2.13       46.81
  01jan2020 |          5        2.13       48.94
  01feb2020 |          5        2.13       51.06
  01mar2020 |          5        2.13       53.19
  01apr2020 |          5        2.13       55.32
  01may2020 |          5        2.13       57.45
  01jun2020 |          5        2.13       59.57
  01jul2020 |          5        2.13       61.70
  01aug2020 |          5        2.13       63.83
  01sep2020 |          5        2.13       65.96
  01oct2020 |          5        2.13       68.09
  01nov2020 |          5        2.13       70.21
  01dec2020 |          5        2.13       72.34
  01jan2021 |          5        2.13       74.47
  01feb2021 |          5        2.13       76.60
  01mar2021 |          5        2.13       78.72
  01apr2021 |          5        2.13       80.85
  01may2021 |          5        2.13       82.98
  01jun2021 |          5        2.13       85.11
  01jul2021 |          5        2.13       87.23
  01aug2021 |          5        2.13       89.36
  01sep2021 |          5        2.13       91.49
  01oct2021 |          5        2.13       93.62
  01nov2021 |          5        2.13       95.74
  01dec2021 |          5        2.13       97.87
  01jan2022 |          5        2.13      100.00
------------+-----------------------------------
      Total |        235      100.00
(note: j = 1 2 3 4 5)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      235   ->      47
Number of variables                   6   ->      21
j variable (5 values)         ethnicity   ->   (dropped)
xij variables:
                                  value   ->   value1 value2 ... value5
                                   rate   ->   rate1 rate2 ... rate5
                             population   ->   population1 population2 ... popu
> lation5
                                  hba1c   ->   hba1c1 hba1c2 ... hba1c5
-----------------------------------------------------------------------------

Contains data
  obs:            47                          
 vars:            21                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
hba1c1          byte    %8.0g                 1 hba1c
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
rate1           float   %9.0g                 1 rate
hba1c2          byte    %8.0g                 2 hba1c
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
rate2           float   %9.0g                 2 rate
hba1c3          byte    %8.0g                 3 hba1c
population3     int     %8.0g                 3 population
value3          float   %9.0g                 3 value
rate3           float   %9.0g                 3 rate
hba1c4          byte    %8.0g                 4 hba1c
population4     int     %8.0g                 4 population
value4          float   %9.0g                 4 value
rate4           float   %9.0g                 4 rate
hba1c5          byte    %8.0g                 5 hba1c
population5     int     %8.0g                 5 population
value5          float   %9.0g                 5 value
rate5           float   %9.0g                 5 rate
-------------------------------------------------------------------------------
Sorted by: dateA
(note: file ./output/graphs/line_dm_ethnic_hba1c.svg not found)
(file ./output/graphs/line_dm_ethnic_hba1c.svg written in SVG format)
(5 vars, 235 obs)

      dateA |      Freq.     Percent        Cum.
------------+-----------------------------------
  01mar2018 |          5        2.13        2.13
  01apr2018 |          5        2.13        4.26
  01may2018 |          5        2.13        6.38
  01jun2018 |          5        2.13        8.51
  01jul2018 |          5        2.13       10.64
  01aug2018 |          5        2.13       12.77
  01sep2018 |          5        2.13       14.89
  01oct2018 |          5        2.13       17.02
  01nov2018 |          5        2.13       19.15
  01dec2018 |          5        2.13       21.28
  01jan2019 |          5        2.13       23.40
  01feb2019 |          5        2.13       25.53
  01mar2019 |          5        2.13       27.66
  01apr2019 |          5        2.13       29.79
  01may2019 |          5        2.13       31.91
  01jun2019 |          5        2.13       34.04
  01jul2019 |          5        2.13       36.17
  01aug2019 |          5        2.13       38.30
  01sep2019 |          5        2.13       40.43
  01oct2019 |          5        2.13       42.55
  01nov2019 |          5        2.13       44.68
  01dec2019 |          5        2.13       46.81
  01jan2020 |          5        2.13       48.94
  01feb2020 |          5        2.13       51.06
  01mar2020 |          5        2.13       53.19
  01apr2020 |          5        2.13       55.32
  01may2020 |          5        2.13       57.45
  01jun2020 |          5        2.13       59.57
  01jul2020 |          5        2.13       61.70
  01aug2020 |          5        2.13       63.83
  01sep2020 |          5        2.13       65.96
  01oct2020 |          5        2.13       68.09
  01nov2020 |          5        2.13       70.21
  01dec2020 |          5        2.13       72.34
  01jan2021 |          5        2.13       74.47
  01feb2021 |          5        2.13       76.60
  01mar2021 |          5        2.13       78.72
  01apr2021 |          5        2.13       80.85
  01may2021 |          5        2.13       82.98
  01jun2021 |          5        2.13       85.11
  01jul2021 |          5        2.13       87.23
  01aug2021 |          5        2.13       89.36
  01sep2021 |          5        2.13       91.49
  01oct2021 |          5        2.13       93.62
  01nov2021 |          5        2.13       95.74
  01dec2021 |          5        2.13       97.87
  01jan2022 |          5        2.13      100.00
------------+-----------------------------------
      Total |        235      100.00
(note: j = 1 2 3 4 5)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      235   ->      47
Number of variables                   6   ->      21
j variable (5 values)         ethnicity   ->   (dropped)
xij variables:
                                  value   ->   value1 value2 ... value5
                                   rate   ->   rate1 rate2 ... rate5
                             population   ->   population1 population2 ... popu
> lation5
                            systolic_bp   ->   systolic_bp1 systolic_bp2 ... sy
> stolic_bp5
-----------------------------------------------------------------------------

Contains data
  obs:            47                          
 vars:            21                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
systolic_bp1    byte    %8.0g                 1 systolic_bp
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
rate1           float   %9.0g                 1 rate
systolic_bp2    byte    %8.0g                 2 systolic_bp
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
rate2           float   %9.0g                 2 rate
systolic_bp3    byte    %8.0g                 3 systolic_bp
population3     int     %8.0g                 3 population
value3          float   %9.0g                 3 value
rate3           float   %9.0g                 3 rate
systolic_bp4    byte    %8.0g                 4 systolic_bp
population4     int     %8.0g                 4 population
value4          float   %9.0g                 4 value
rate4           float   %9.0g                 4 rate
systolic_bp5    byte    %8.0g                 5 systolic_bp
population5     int     %8.0g                 5 population
value5          float   %9.0g                 5 value
rate5           float   %9.0g                 5 rate
-------------------------------------------------------------------------------
Sorted by: dateA
(note: file ./output/graphs/line_dm_ethnic_systolic_bp.svg not found)
(file ./output/graphs/line_dm_ethnic_systolic_bp.svg written in SVG format)
(5 vars, 235 obs)

      dateA |      Freq.     Percent        Cum.
------------+-----------------------------------
  01mar2018 |          5        2.13        2.13
  01apr2018 |          5        2.13        4.26
  01may2018 |          5        2.13        6.38
  01jun2018 |          5        2.13        8.51
  01jul2018 |          5        2.13       10.64
  01aug2018 |          5        2.13       12.77
  01sep2018 |          5        2.13       14.89
  01oct2018 |          5        2.13       17.02
  01nov2018 |          5        2.13       19.15
  01dec2018 |          5        2.13       21.28
  01jan2019 |          5        2.13       23.40
  01feb2019 |          5        2.13       25.53
  01mar2019 |          5        2.13       27.66
  01apr2019 |          5        2.13       29.79
  01may2019 |          5        2.13       31.91
  01jun2019 |          5        2.13       34.04
  01jul2019 |          5        2.13       36.17
  01aug2019 |          5        2.13       38.30
  01sep2019 |          5        2.13       40.43
  01oct2019 |          5        2.13       42.55
  01nov2019 |          5        2.13       44.68
  01dec2019 |          5        2.13       46.81
  01jan2020 |          5        2.13       48.94
  01feb2020 |          5        2.13       51.06
  01mar2020 |          5        2.13       53.19
  01apr2020 |          5        2.13       55.32
  01may2020 |          5        2.13       57.45
  01jun2020 |          5        2.13       59.57
  01jul2020 |          5        2.13       61.70
  01aug2020 |          5        2.13       63.83
  01sep2020 |          5        2.13       65.96
  01oct2020 |          5        2.13       68.09
  01nov2020 |          5        2.13       70.21
  01dec2020 |          5        2.13       72.34
  01jan2021 |          5        2.13       74.47
  01feb2021 |          5        2.13       76.60
  01mar2021 |          5        2.13       78.72
  01apr2021 |          5        2.13       80.85
  01may2021 |          5        2.13       82.98
  01jun2021 |          5        2.13       85.11
  01jul2021 |          5        2.13       87.23
  01aug2021 |          5        2.13       89.36
  01sep2021 |          5        2.13       91.49
  01oct2021 |          5        2.13       93.62
  01nov2021 |          5        2.13       95.74
  01dec2021 |          5        2.13       97.87
  01jan2022 |          5        2.13      100.00
------------+-----------------------------------
      Total |        235      100.00
(note: j = 1 2 3 4 5)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      235   ->      47
Number of variables                   6   ->      21
j variable (5 values)         ethnicity   ->   (dropped)
xij variables:
                                  value   ->   value1 value2 ... value5
                                   rate   ->   rate1 rate2 ... rate5
                             population   ->   population1 population2 ... popu
> lation5
                                bp_meas   ->   bp_meas1 bp_meas2 ... bp_meas5
-----------------------------------------------------------------------------

Contains data
  obs:            47                          
 vars:            21                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
bp_meas1        byte    %8.0g                 1 bp_meas
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
rate1           float   %9.0g                 1 rate
bp_meas2        byte    %8.0g                 2 bp_meas
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
rate2           float   %9.0g                 2 rate
bp_meas3        byte    %8.0g                 3 bp_meas
population3     int     %8.0g                 3 population
value3          float   %9.0g                 3 value
rate3           float   %9.0g                 3 rate
bp_meas4        byte    %8.0g                 4 bp_meas
population4     int     %8.0g                 4 population
value4          float   %9.0g                 4 value
rate4           float   %9.0g                 4 rate
bp_meas5        byte    %8.0g                 5 bp_meas
population5     int     %8.0g                 5 population
value5          float   %9.0g                 5 value
rate5           float   %9.0g                 5 rate
-------------------------------------------------------------------------------
Sorted by: dateA
(note: file ./output/graphs/line_dm_ethnic_bp_meas.svg not found)
(file ./output/graphs/line_dm_ethnic_bp_meas.svg written in SVG format)

. /* Generates graphs for DM hospital admissions
> foreach v in primary any /*emergency*/ {
>     * Ethnicity - Type 1 DM
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_t1_`v'_ethnicity_r
> ate.csv, numericcols(4)
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA 
>     * Collapse at 3 monthly intervals
>     gen quarter = qofd(dateA)
>     collapse (sum) value rate has_t1_diabetes t1dm_admission_`v' (min) dateA,
>   by(quarter ethnicity)
>     drop quarter
>     * Outputing file 
>     export delimited using ./output/collapsed/collapse_measure_dm_t1_`v'_ethn
> icity_rate.csv
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate has_t1_diabetes t1dm_admission_`v', i(dateA) j(et
> hnicity)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "White"
>     label var rate2 "Mixed"
>     label var rate3 "Asian"
>     label var rate4 "Black"
>     label var rate5 "Other"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("Ethnic categories", size(small)))
> 
> 
>     graph export ./output/graphs/line_dm_ethnic_t1_`v'.svg, as(svg) replace
>     
>     * IMD - type 1 DM
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_t1_`v'_imd_rate.cs
> v, numericcols(4)
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA 
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate has_t1_diabetes t1dm_admission_`v', i(dateA) j(im
> d)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "IMD - 1"
>     label var rate2 "IMD - 2"
>     label var rate3 "IMD - 3"
>     label var rate4 "IMD - 4"
>     label var rate5 "IMD - 5"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("IMD categories", size(small)))
> 
> 
>     graph export ./output/graphs/line_dm_imd_t1_`v'.svg, as(svg) replace
> 
>     * Ethnicity - Type 2 DM
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_t2_`v'_ethnicity_r
> ate.csv
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA
>     * Collapse at 3 monthly intervals
>     gen quarter = qofd(dateA)
>     collapse (sum) value rate has_t2_diabetes t2dm_admission_`v' (min) dateA,
>   by(quarter ethnicity)
>     drop quarter
>     * Outputing file 
>     export delimited using ./output/collapsed/collapse_measure_dm_t2_`v'_ethn
> icity_rate.csv 
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate has_t2_diabetes t2dm_admission_`v', i(dateA) j(et
> hnicity)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "White"
>     label var rate2 "Mixed"
>     label var rate3 "Asian"
>     label var rate4 "Black"
>     label var rate5 "Other"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("Ethnic categories", size(small)))
>  
> 
>     graph export ./output/graphs/line_dm_ethnic_t2_`v'.svg, as(svg) replace
>     * IMD - type 2 DM
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_t2_`v'_imd_rate.cs
> v
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA 
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate has_t2_diabetes t2dm_admission_`v', i(dateA) j(im
> d)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "IMD - 1"
>     label var rate2 "IMD - 2"
>     label var rate3 "IMD - 3"
>     label var rate4 "IMD - 4"
>     label var rate5 "IMD - 5"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("IMD categories", size(small)))
> 
>     graph export ./output/graphs/line_dm_imd_t2_`v'.svg, as(svg) replace
> 
>     /* Ethnicity - Ketoacidosis
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_keto_`v'_ethnicity
> _rate.csv
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA 
>     * Collapse at 3 monthly intervals
>     gen quarter = qofd(dateA)
>     collapse (sum) value rate population dm_keto_admission_`v' (min) dateA,  
> by(quarter ethnicity)
>     drop quarter
>     * Outputing file 
>     export delimited using ./output/collapsed/collapse_measure_dm_keto_`v'_et
> hnicity_rate.csv
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate population dm_keto_admission_`v', i(dateA) j(ethn
> icity)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "White"
>     label var rate2 "Mixed"
>     label var rate3 "Asian"
>     label var rate4 "Black"
>     label var rate5 "Other"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("Ethnic categories", size(small)))
>  
> 
>     graph export ./output/graphs/line_dm_ethnic_keto_`v'.svg, as(svg) replace
>     */
>     * IMD - type 1 DM
>     clear 
>     import delimited using ./output/measures/dm/measure_dm_keto_`v'_imd_rate.
> csv
>     * Generate rate per 100,000
>     gen rate = value*100000 
>     * Format date
>     gen dateA = date(date, "YMD")
>     drop date
>     format dateA %dD/M/Y
>     tab dateA 
>     * reshape dataset so columns with rates for each ethnicity 
>     reshape wide value rate population dm_keto_admission_`v', i(dateA) j(imd)
>     describe
>     * Labelling ethnicity variables
>     label var rate1 "IMD - 1"
>     label var rate2 "IMD - 2"
>     label var rate3 "IMD - 3"
>     label var rate4 "IMD - 4"
>     label var rate5 "IMD - 5"
> 
>     * Generate line graph
>     graph twoway line rate1 rate2 rate3 rate4 rate5 date, tlabel(01Jan2018(18
> 0)01Jan2022, angle(45) ///
>     format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") 
> ylabel(, labsize(small) ///
>     angle(0)) yscale(titlegap(*10)) xmtick(##6) legend(row(1) size(small) tit
> le("IMD categories", size(small)))
> 
> 
>     graph export ./output/graphs/line_dm_imd_keto_`v'.svg, as(svg) replace
> 
> }
> 
> log close

end of do-file

. . file open output using "/tmp/tmp.RqcQVoYtbX", write text replace

. . file write output "success" 

. . file close output

. 
end of do-file


